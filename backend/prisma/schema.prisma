generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  profileImage   String?
  email     String   @unique
  password  String
  bio       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  posts     Post[]
  comments  Comment[]
  replies   Reply[]
  likes     Like[]
  followers Follow[]  @relation("followers")
  following Follow[]  @relation("following")
  shares    Share[]   @relation("UserShares")
  role      String    @default("user")

  sentMessages     Message[] @relation("SentMessages")
  receivedMessages Message[] @relation("ReceivedMessages")
}

model Post {
  id        Int      @id @default(autoincrement())
  content   String
  imageUrl  String?
  createdAt DateTime @default(now())
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int

  comments Comment[]
  likes    Like[]
  shares   Share[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int

  replies Reply[]
}

model Reply {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  comment   Comment  @relation(fields: [commentId], references: [id])
  commentId Int
}

model Like {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int

  post   Post @relation(fields: [postId], references: [id])
  postId Int

  createdAt DateTime @default(now())

  @@unique([userId, postId])
}

model Share {
  id        Int      @id @default(autoincrement())
  user      User     @relation("UserShares", fields: [userId], references: [id])
  userId    Int
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  createdAt DateTime @default(now())
}

model Follow {
  id          Int  @id @default(autoincrement())
  follower    User @relation("following", fields: [followerId], references: [id])
  followerId  Int
  following   User @relation("followers", fields: [followingId], references: [id])
  followingId Int

  @@unique([followerId, followingId])
}

model Message {
  id          Int      @id @default(autoincrement())
  senderId    Int
  receiverId  Int
  content     String
  createdAt   DateTime @default(now())
  readAt      DateTime?
  
  sender      User     @relation("SentMessages", fields: [senderId], references: [id])
  receiver    User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
}

generator dbml {
  provider = "prisma-dbml-generator"
  output   = "./dbml"
}
